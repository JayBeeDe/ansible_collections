---
- block:
    - name: Set a hostname (1/2)
      ansible.builtin.hostname:
        name: "{{ ansible_host }}"

    - name: Set a hostname (2/2)
      lineinfile:
        dest: "/etc/hosts"
        regexp: "^127.0.1.1\t+.+$"
        line: "127.0.1.1\t{{ ansible_host }}"
        state: present
        backup: no

    - name: "Configuring system network..."
      nmcli:
        type: ethernet
        conn_name: "net-{{ network_interface }}"
        ifname: "{{ network_interface }}"
        dns4:
          - "{{ network_dns }}"
        autoconnect: yes
        state: present

    - name: "Configuring sshd..."
      template:
        src: "{{ role_path }}/files/sshd_config.tpl"
        dest: /etc/ssh/sshd_config
        mode: "0644"
        owner: "root"
        group: "root"
        force: yes
      notify: Restart sshd

    - name: "Configuring firewalld..."
      template:
        src: "{{ role_path }}/files/firewalld.xml.tpl"
        dest: /etc/firewalld/zones/public.xml
        mode: "0644"
        owner: "root"
        group: "root"
        force: yes
      notify: Restart firewalld

    - name: "Configuring IPv6..."
      sysctl:
        name: net.ipv6.conf.all.disable_ipv6
        state: absent
      when: ipv6_flag == 1

    - name: "Configuring IPv4 forwarding..."
      sysctl:
        name: net.ipv4.ip_forward
        value: 1
      when: inventory_hostname in groups["vpn"]

    - name: "Configuring IPv6 forwarding..."
      sysctl:
        name: net.ipv6.conf.all.forwarding
        value: 1
      when: ipv6_flag == 1 and inventory_hostname in groups["vpn"]

    - name: "Masking ctrl-alt-del.target..."
      systemd:
        name: "ctrl-alt-del.target"
        enabled: no
        masked: yes
        daemon_reload: yes

    - name: "Configuring motd..."
      copy:
        src: "{{ role_path }}/files/motd-{{ host_item | lower }}.txt"
        dest: /etc/motd
        mode: "0755"
        owner: "root"
        group: "root"
      with_items: "{{ ansible_host }}"
      loop_control:
        loop_var: host_item
      ignore_errors: yes

    - name: "Configuring aliases(1/2)..."
      template:
        src: "{{ role_path }}/files/bash_aliases.tpl"
        dest: "{{ line_item.home }}/.bash_aliases"
        mode: "0755"
        owner: "{{ line_item.user }}"
        group: "{{ line_item.user }}"
        block_start_string: "<%"
        block_end_string: "%>"
        variable_start_string: "[%" # because script contains default character
        variable_end_string: "%]" # because script contains default character
        comment_start_string: "{=" # because script contains default character
        comment_end_string: "=}" # because script contains default character
      with_items:
        - { home: "/root", user: "root" }
        - { home: "{{ home }}", user: "{{ user }}" }
      loop_control:
        loop_var: line_item

    - name: "Configuring aliases(2/2)..."
      lineinfile:
        path: "{{ home_item }}/.bashrc"
        state: present
        regexp: ^(\s*)(.|source)( ~/.bash_aliases)(\s*)$
        line: ". ~/.bash_aliases"
        backup: no
      with_items:
        - /root
        - "{{ home }}"
      loop_control:
        loop_var: home_item

  become: yes
  become_user: "root"
  environment:
    PWD: ""
