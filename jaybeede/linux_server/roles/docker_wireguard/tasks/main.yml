---
- block:
    - name: Create volume
      community.docker.docker_volume:
        name: wireguard-proxy-conf-vol

    - name: Create network
      community.docker.docker_network:
        name: wg6
        driver: bridge
        ipam_driver: default
        enable_ipv6: true
        ipam_config:
          - subnet: "{{ wireguard_proxy_cidrv6 }}"

    - name: Run wireguard-proxy
      docker_container:
        detach: yes
        hostname: wireguard-proxy
        image: linuxserver/wireguard:latest
        interactive: yes
        name: wireguard-proxy
        recreate: yes
        restart_policy: always
        restart: yes
        state: started
        tty: yes
        privileged: true
        capabilities:
          - NET_ADMIN
          - SYS_MODULE
        networks:
          - name: wg6
        ports:
          - "{{wireguard_proxy_port}}:51820/udp"
        sysctls:
          net.ipv6.conf.all.disable_ipv6: 0
          net.ipv6.conf.all.forwarding: 1
          net.ipv6.conf.eth0.proxy_ndp: 1
        volumes:
          - wireguard-proxy-conf-vol:/config
          - /lib/modules:/lib/modules
        env:
          PUID: "1000"
          PGID: "1000"
          TZ: Etc/UTC
          SERVERURL: "{{ vpn_domain }}"
          SERVERPORT: "{{ wireguard_proxy_port | string }}"
          PEERS: "{{ wireguard_proxy_peers_list | length | string }}"
          PEERDNS: "{{ network_dns }},{{ network_dns2 }},{{ network_dnsv6 }},{{ network_dnsv62 }}"
          INTERNAL_SUBNET: 10.13.13.0/24
          ALLOWEDIPS: 0.0.0.0/0, ::/0
          PERSISTENTKEEPALIVE_PEERS: all
          LOG_CONFS: "true"

    - name: Configure wireguard server
      template:
        src: "{{ role_path }}/files/wg0.conf.tpl"
        dest: "{{ vol_path }}/wireguard-proxy-conf-vol/_data/wg_confs/wg0.conf"
        mode: "0755"
      notify: Restart wireguard container

    - name: Configure wireguard peers
      template:
        src: "{{ role_path }}/files/peer.conf.tpl"
        dest: "{{ vol_path }}/wireguard-proxy-conf-vol/_data/peer{{ count + 1 }}/peer{{ count + 1 }}.conf"
        mode: "0755"
      no_log: true # prevent logging dict details with secrets
      loop: "{{ wireguard_proxy_peers_list | dict2items }}"
      loop_control:
        index_var: count
      notify: Restart wireguard container

    - name: Configuring additional routes (1/3)...
      file:
        path: /etc/network/routes.d/
        state: directory
        mode: 0755
        owner: "{{ user }}"
        group: "{{ user }}"

    - name: Configuring additional routes (2/3)...
      template:
        src: "{{ role_path }}/files/routes.tpl"
        dest: "/etc/network/routes.d/wireguard-{{ line_item.if_state }}"
        mode: 0755
      vars:
        action_route: "{{ line_item.action_route }}"
      with_items:
        - action_route: add
          if_state: up
        - action_route: del
          if_state: down
      loop_control:
        loop_var: line_item
      notify: Add routes
      when: ipv6_flag == 1

    - name: Configuring additional routes (3/3)...
      blockinfile:
        path: /etc/network/interfaces
        block: |
          post-up /etc/network/routes.d/wireguard-up
          pre-down /etc/network/routes.d/wireguard-down
        state: present
      notify: Add routes
      when: ipv6_flag == 1

  become: yes
  become_user: "root"
  environment:
    PWD: ""
