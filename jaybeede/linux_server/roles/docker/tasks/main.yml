---
- block:
    - name: "Create mounts dir"
      ansible.builtin.file:
        path: "{{ mnt_path }}/{{ item }}"
        state: directory
        recurse: yes
        mode: "0755"
      loop:
        - virtual-desktop-db-init-mnt
        - limesurvey-db-init-mnt
        - etherpad-db-init-mnt
        - etherpad-ui-mnt
        - web-proxy-mnt

    - name: Create a volume
      community.docker.docker_volume:
        name: "{{ item }}"
      loop:
        - virtual-desktop-db-vol
        - limesurvey-db-vol
        - etherpad-db-vol
        - jawanndenn-ui-vol

    # related to db init <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

    - name: "Logical evaluation..."
      set_fact:
        init_mnts:
          - virtual-desktop-db
          - limesurvey-db
          - etherpad-db

    - name: "Resetting all init mnt..."
      shell: rm -fr "{{ mnt_path }}/{{ item }}-init-mnt/"*
      with_items:
        - "{{ init_mnts }}"

    - name: Resetting init mnt (1/2)...
      find:
        paths: "{{ ini_path }}/{{ item }}/"
      register: "output"
      with_items:
        - "{{ init_mnts }}"

    - name: Resetting init mnt (2/2)...
      when: "{{ item.files }}"
      copy:
        remote_src: yes
        src: "{{ item.files[0].path }}"
        dest: "{{ mnt_path }}/{{ item.item }}-init-mnt/init.sql"
      with_items:
        - "{{ output.results }}"

    # related to volume init >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

    - name: Running virtual-desktop-db
      community.docker.docker_container:
        detach: yes
        hostname: virtual-desktop-db
        image: mysql:5.7
        interactive: yes
        name: virtual-desktop-db
        recreate: yes # to check
        restart_policy: always
        restart: yes
        state: started
        tty: yes
        volumes:
          - "{{ mnt_path }}/virtual-desktop-db-init-mnt:/docker-entrypoint-initdb.d"
          - virtual-desktop-db-vol:/var/lib/mysql
        env:
          MYSQL_DATABASE: guacamole_db
          MYSQL_USER: guacamole_user
          MYSQL_PASSWORD: "{{ virtualdesktopdb_password }}"
          MYSQL_ROOT_PASSWORD: "{{ virtualdesktopdb_password }}"

    - name: Running virtual-desktop-gtw
      community.docker.docker_container:
        detach: yes
        hostname: virtual-desktop-gtw
        image: guacamole/guacd
        interactive: yes
        name: virtual-desktop-gtw
        recreate: yes # to check
        restart_policy: always
        restart: yes
        state: started
        tty: yes

    - name: Running virtual-desktop-ui
      community.docker.docker_container:
        detach: yes
        hostname: virtual-desktop-ui
        image: guacamole/guacamole
        interactive: yes
        name: virtual-desktop-ui
        recreate: yes # to check
        restart_policy: always
        restart: yes
        state: started
        tty: yes
        links:
          - virtual-desktop-db:mysql
          - virtual-desktop-gtw:guacd
        env:
          MYSQL_DATABASE: guacamole_db
          MYSQL_USER: guacamole_user
          MYSQL_PASSWORD: "{{ virtualdesktopdb_password }}"
          MYSQL_SSL_MODE: disabled

    - name: Preparing virtual-desktop-ui...
      community.docker.docker_container_exec:
        user: root
        container: virtual-desktop-ui
        command: /bin/sh -c "rm -fr /home/guacamole/tomcat/webapps/ROOT/ && ln -s /home/guacamole/tomcat/webapps/guacamole.war /home/guacamole/tomcat/webapps/virtual-desktop.war && ln -s /home/guacamole/tomcat/webapps/guacamole.war /home/guacamole/tomcat/webapps/ROOT.war"

    - name: Running limesurvey-db
      community.docker.docker_container:
        detach: yes
        hostname: limesurvey-db
        image: mysql:5.7
        interactive: yes
        name: limesurvey-db
        recreate: yes # to check
        restart_policy: always
        restart: yes
        state: started
        tty: yes
        volumes:
          - "{{ mnt_path }}/limesurvey-db-init-mnt:/docker-entrypoint-initdb.d"
          - limesurvey-db-vol:/var/lib/mysql
        env:
          MYSQL_DATABASE: limesurveydb
          MYSQL_USER: limesurvey_user
          MYSQL_PASSWORD: "{{ limesurveydb_password }}"
          MYSQL_ROOT_PASSWORD: "{{ limesurveydb_password }}"

    - name: Running limesurvey-ui
      community.docker.docker_container:
        detach: yes
        hostname: limesurvey-ui
        image: jbd92/limesurvey:stable
        interactive: yes
        name: limesurvey-ui
        recreate: yes # to check
        restart_policy: always
        restart: yes
        state: started
        tty: yes
        links:
          - limesurvey-db:mysql
        volumes:
          - "{{ mnt_path }}/limesurvey-ui-mnt/settings.json:/opt/limesurvey-lite/settings.json"
        env:
          dbHost: limesurvey-db
          dbName: limesurveydb
          dbUser: limesurvey_user
          dbPass: "{{ limesurveydb_password }}"
          backOfficeUser: "{{ user }}"
          backOfficePassword: "{{ limesurveyui_password }}"
          backOfficeLanguage: fr
          urlPrefix: /limesurvey/

    - name: Running jawanndenn-ui
      community.docker.docker_container:
        detach: yes
        hostname: jawanndenn-ui
        image: jbd92/jawanndenn:latest
        interactive: yes
        name: jawanndenn-ui
        recreate: yes # to check
        restart_policy: always
        restart: yes
        state: started
        tty: yes
        volumes:
          - jawanndenn-ui-vol:/data
        env:
          urlPrefix: jawanndenn

    - name: Running etherpad-db
      community.docker.docker_container:
        detach: yes
        hostname: etherpad-db
        image: mysql:5.7
        interactive: yes
        name: etherpad-db
        recreate: yes # to check
        restart_policy: always
        restart: yes
        state: started
        tty: yes
        volumes:
          - "{{ mnt_path }}/etherpad-db-init-mnt:/docker-entrypoint-initdb.d"
          - etherpad-db-vol:/var/lib/mysql
        env:
          MYSQL_DATABASE: etherpaddb
          MYSQL_USER: etherpad_user
          MYSQL_PASSWORD: "{{ etherpaddb_password }}"
          MYSQL_ROOT_PASSWORD: "{{ etherpaddb_password }}"

    - name: Pre-Configuring Etherpad...
      copy:
        src: "{{ role_path }}/files/etherpad-ui/settings.jsonc"
        dest: "{{ mnt_path }}/etherpad-ui-mnt/settings.json"
        mode: "0755"
        force: no

    - name: Running etherpad-ui
      community.docker.docker_container:
        detach: yes
        hostname: etherpad-ui
        image: etherpad/etherpad
        interactive: yes
        name: etherpad-ui
        recreate: yes # to check
        restart_policy: always
        restart: yes
        state: started
        tty: yes
        links:
          - etherpad-db:mysql
        volumes:
          - "{{ mnt_path }}/etherpad-ui-mnt/settings.json:/opt/etherpad-lite/settings.json"
        env:
          DB_TYPE: mysql
          DB_HOST: etherpad-db
          DB_PORT: "3306"
          DB_NAME: etherpaddb
          DB_USER: etherpad_user
          DB_PASS: "{{ etherpaddb_password }}"
          DB_CHARSET: utf8mb4
          TITLE: JayBeeDe
          SKIN_VARIANTS: "super-dark-toolbar super-dark-background dark-editor"
          FAVICON: "https://{{ server_domain }}/wp-content/uploads/2017/01/favicon.png"
          DEFAULT_PAD_TEXT: ""
          PORT: "9001"
          ADMIN_PASSWORD: "{{ etherpadui_password }}"

    - name: Pre-Installing Etherpad Plugins...
      community.docker.docker_container_exec:
        container: etherpad-ui
        command: /bin/bash -c "/usr/local/bin/npm update"

    - name: Installing Etherpad Plugins...
      community.docker.docker_container_exec:
        container: etherpad-ui
        command: /bin/bash -c "/usr/local/bin/npm install {{ item }}"
      loop:
        - ep_embedded_hyperlinks2
        - ep_align
        - ep_tables4
        - ep_copy_paste_images
        - ep_code_formatting
        - ep_comments_page
        - ep_spellcheck
        - ep_mathjax
        - ep_markdown
        - ep_adminpads2
      register: result

    - name: Print stderr lines
      debug:
        var: result

    - name: Restarting Etherpad...
      community.docker.docker_container:
        name: etherpad-ui
        restart: true

    - name: "Configuring web-proxy..."
      template:
        src: "{{ role_path }}/files/web-proxy/nginx.conf.tpl"
        dest: "{{ mnt_path }}/web-proxy-mnt/nginx.conf"
        mode: "0755"
        owner: "root"
        group: "root"
        force: yes

    - name: Running web-proxy
      community.docker.docker_container:
        detach: yes
        hostname: web-proxy
        image: nginx:1.15.5
        interactive: yes
        name: web-proxy
        recreate: yes # to check
        restart_policy: always
        restart: yes
        state: started
        tty: yes
        links:
          - "virtual-desktop-ui:virtual-desktop-ui"
          - "limesurvey-ui:limesurvey-ui"
          - "jawanndenn-ui:jawanndenn-ui"
          - "etherpad-ui:etherpad-ui"
        ports:
          - 80:80
        volumes:
          - "{{ mnt_path }}/web-proxy-mnt/nginx.conf:/etc/nginx/nginx.conf"
        env:
          urlPrefix: jawanndenn

  become: yes
  become_user: "root"
