---
- block:
    - name: Creating lib scripts directory....
      file:
        path: "{{ lib_path }}"
        state: directory
    - name: Installing PyKeePass Wrapper...
      copy:
        src: "{{ role_path }}/files/kdbxQuery.py"
        dest: "{{ lib_path }}/kdbxQuery.py"
        mode: 755
    - name: Saving telegram token to kdbx...
      keepass:
        database: "{{ kdbx_path }}"
        keyfile: "{{ kdbx_key_path }}"
        title: /others/telegram
        username: "{{ telegram_chatid }}"
        password: "{{ telegram_token }}"
    - name: Saving matrix token to kdbx (1/2)...
      keepass:
        database: "{{ kdbx_path }}"
        keyfile: "{{ kdbx_key_path }}"
        title: /others/matrix
        username: "{{ matrix_userid }}"
        password: "{{ matrix_token }}"
        url: "{{ matrix_homeserver }}" # note that the "store" is still needed for matrix-commander...
    - name: Saving matrix token to kdbx (2/2)...
      keepass:
        database: "{{ kdbx_path }}"
        keyfile: "{{ kdbx_key_path }}"
        title: /others/matrix2
        username: "{{ matrix_chatid }}"
        password: "{{ matrix_deviceid }}"
    - name: Saving blog-db password to kdbx...
      keepass:
        database: "{{ kdbx_path }}"
        keyfile: "{{ kdbx_key_path }}"
        title: /databases/blog-db/blog_db
        username: blog_user
        password: "{{ blogdb_password }}"
        url: "mysql://blog-db/blog_db"
    - name: Saving virtual-desktop-db password to kdbx...
      keepass:
        database: "{{ kdbx_path }}"
        keyfile: "{{ kdbx_key_path }}"
        title: /databases/virtual-desktop-db/guacamole_db
        username: guacamole_user
        password: "{{ virtualdesktopdb_password }}"
        url: "mysql://virtual-desktop-db/guacamole_db"
    - name: Saving limesurvey-db password to kdbx...
      keepass:
        database: "{{ kdbx_path }}"
        keyfile: "{{ kdbx_key_path }}"
        title: /databases/limesurvey-db/limesurveydb
        username: limesurvey_user
        password: "{{ limesurveydb_password }}"
        url: "mysql://limesurvey-db/limesurveydb"
    - name: Saving etherpad-db password to kdbx...
      keepass:
        database: "{{ kdbx_path }}"
        keyfile: "{{ kdbx_key_path }}"
        title: /databases/etherpad-db/etherpaddb
        username: etherpad_user
        password: "{{ etherpaddb_password }}"
        url: "mysql://etherpad-db/etherpaddb"
    - name: Saving matrix-db password to kdbx...
      keepass:
        database: "{{ kdbx_path }}"
        keyfile: "{{ kdbx_key_path }}"
        title: /databases/matrix-db/matrixdb
        username: matrixdb
        password: "{{ matrixdb_password }}"
        url: "postgres://matrix-db/matrixdb"
    - name: Saving syncv3 password to kdbx...
      keepass:
        database: "{{ kdbx_path }}"
        keyfile: "{{ kdbx_key_path }}"
        title: /databases/matrix-db/syncv3
        username: matrixdb
        password: "{{ matrixdb_password }}"
        url: "postgres://matrix-db/syncv3"
    - name: Saving telegram password to kdbx...
      keepass:
        database: "{{ kdbx_path }}"
        keyfile: "{{ kdbx_key_path }}"
        title: /databases/matrix-db/telegram
        username: matrixdb
        password: "{{ matrixdb_password }}"
        url: "postgres://matrix-db/telegram"
    - name: Saving whatsapp password to kdbx...
      keepass:
        database: "{{ kdbx_path }}"
        keyfile: "{{ kdbx_key_path }}"
        title: /databases/matrix-db/whatsapp
        username: matrixdb
        password: "{{ matrixdb_password }}"
        url: "postgres://matrix-db/whatsapp"
    - name: Create daily cron env variables (1/5)
      ansible.builtin.cron:
        name: SHELL
        env: yes
        job: /bin/bash
    - name: Create daily cron env variables (2/5)
      ansible.builtin.cron:
        name: PATH
        env: yes
        job: "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
    - name: Create daily cron env variables (3/5)
      ansible.builtin.cron:
        name: COMMANDER_STORE_DIR
        env: yes
        job: "{{ commander_store_dir }}"
    - name: Create daily cron env variables (4/5)
      ansible.builtin.cron:
        name: PYKEEPASS_DATABASE
        env: yes
        job: "{{ kdbx_path }}"
    - name: Create daily cron env variables (5/5)
      ansible.builtin.cron:
        name: PYKEEPASS_KEYFILE
        env: yes
        job: "{{ kdbx_key_path }}"
    - name: Creating cron scripts directory....
      file:
        path: "{{ cron_path }}"
        state: directory
    - name: Installing Database Backups script...
      copy:
        src: "{{ role_path }}/files/dbBackups.sh"
        dest: "{{ cron_path }}/dbBackups.sh"
        mode: 700
    - name: Create daily cron for Database Backups
      ansible.builtin.cron:
        name: Database Backups
        minute: "15"
        hour: "21"
        job: "{{ cron_path }}/dbBackups.sh /databases/blog-db/blog_db /databases/virtual-desktop-db/guacamole_db /databases/limesurvey-db/limesurveydb /databases/etherpad-db/etherpaddb /databases/matrix-db/matrixdb /databases/matrix-db/syncv3 /databases/matrix-db/telegram /databases/matrix-db/whatsapp 2>&1 >> /var/log/dbBackups.log"
    - name: Installing Certificate Renewal script...
      copy:
        src: "{{ role_path }}/files/renewCert.sh"
        dest: "{{ cron_path }}/renewCert.sh"
        mode: 700
    - name: Create daily cron for Certificate Renewal
      ansible.builtin.cron:
        name: Certificate Renewal
        minute: "20"
        hour: "0"
        job: "{{ cron_path }}/renewCert.sh {{ server_domain }} {{ email }} 2>&1 >> /var/log/renewCert.log"

  become: yes
  become_user: "root"
